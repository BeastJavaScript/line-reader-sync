// Generated by CoffeeScript 1.7.1
(function() {
  var LineReaderSync, TestCase, TestResult, testLRClass, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  LineReaderSync = require("../bin/LineReaderSync.js").LineReaderSync;

  _ref = require("beast-test"), TestCase = _ref.TestCase, TestResult = _ref.TestResult;

  new (testLRClass = (function(_super) {
    __extends(testLRClass, _super);

    function testLRClass() {
      testLRClass.__super__.constructor.call(this);
    }

    testLRClass.prototype.base = function() {
      return new LineReaderSync("./sample.txt");
    };

    testLRClass.prototype.testReadLine = function(lr) {
      this.assertTrue(lr.hasNext());
      this.assertEquals(lr.readLine(), "this is some sample text");
      this.assertTrue(lr.hasNext());
      this.assertEquals(lr.readLine(), "this is some more on line two");
      return this.assertEquals(lr.hasNext(), false);
    };

    return testLRClass;

  })(TestCase));

  console.log(TestCase.getResult());

}).call(this);
